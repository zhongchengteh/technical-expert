
import React from 'react';
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { Info } from 'lucide-react'; // Import Info icon

interface GadgetDetail {
  id: string;
  address: string;
  instruction: string;
  tooltip: string;
}

interface GuideGadgetsStepProps {
  selectedGadgets: string[];
  onGadgetToggle: (gadgetId: string) => void;
  gadgetDetails: GadgetDetail[];
}

const GuideGadgetsStep: React.FC<GuideGadgetsStepProps> = ({ selectedGadgets, onGadgetToggle, gadgetDetails }) => {
  return (
    <TooltipProvider>
      <div>
        <h4 className="text-lg font-medium text-yellow-400 mb-2">Step 4️⃣: Choose Correct Gadgets</h4>
        <p className="text-slate-300 mb-3">📌 "Which ROP gadgets can you use to set up the arguments and call the function?"</p>
        <p className="text-xs text-slate-400 mb-3">🧠 Hover over each gadget to see what it does. Select all that apply.</p>
        <div className="space-y-2">
          {gadgetDetails.map(gadget => (
            <Tooltip key={gadget.id}>
              <TooltipTrigger asChild>
                <div className="flex items-center space-x-3 p-2 rounded-md hover:bg-slate-600/50 transition-colors cursor-pointer">
                  <Checkbox
                    id={`guide-${gadget.id}`}
                    checked={selectedGadgets.includes(gadget.id)}
                    onCheckedChange={() => onGadgetToggle(gadget.id)}
                    className="cursor-pointer"
                  />
                  <Label htmlFor={`guide-${gadget.id}`} className="text-sm font-mono cursor-pointer">
                    {gadget.address}: {gadget.instruction}
                  </Label>
                </div>
              </TooltipTrigger>
              <TooltipContent className="bg-slate-800 text-slate-200 border-slate-600 max-w-xs">
                <p>{gadget.tooltip}</p>
              </TooltipContent>
            </Tooltip>
          ))}
        </div>
        <p className="text-xs text-sky-300 italic p-2 bg-slate-600/70 rounded-md flex items-start gap-1 mt-3">
          <Info size={20} className="flex-shrink-0 text-sky-400" />
          <span>ℹ️ Note: Since there is no direct `pop rsi; ret`, we use `pop rax; ret` and `mov rsi, rax; ret` to set RSI.</span>
        </p>
      </div>
    </TooltipProvider>
  );
};

export default GuideGadgetsStep;
